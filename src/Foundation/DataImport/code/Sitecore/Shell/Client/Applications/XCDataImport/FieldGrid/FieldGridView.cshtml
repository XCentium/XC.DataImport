@using Sitecore
@using Sitecore.Mvc
@using Sitecore.Data
@using Sitecore.Data.Items
@using Sitecore.Mvc.Presentation
@using System.Collections.Specialized
@using System.Web.Mvc
@using Sitecore.Speak.Components.Models.Forms.FormPanels
@using Sitecore.Speak.Components.Models.ListsAndGrids.Grids
@model XC.Foundation.DataImport.Models.FieldGridRenderingModel
@{
    Model.Class.Append("sc-form sc-grid row");
    Model.DataBind.IsVisible().Bind("readonly", "FormData");
    var index = 0;
}
<form @Model.HtmlAttributes>

    <div class="header">
        @foreach (FormSection section in Model.FormSections)
        { 
            foreach (FormDressingItem child in section.FormFields)
            {
                <div class="@Html.GetColumnsClass(Model.GridAttributes, Model.GridCellSizes, Model.PaddingClass, index)">
                    <div title="@child.FormLabel">
                        <div class="sc-formlabeltop">
                            <span>@child.FormLabel</span>
                        </div>
                    </div>
                </div>
                @Html.RenderClearFix(Model.GridAttributes, index)
                index++;
            }
        }
    </div>
    <div class="row row_0">
        @{
            index = 0;
            var row = 0;

            foreach (FormSection section in Model.FormSections)
            {
                foreach (FormDressingItem child in section.FormFields)
                {
                <div class="@Html.GetColumnsClass(Model.GridAttributes, Model.GridCellSizes, Model.PaddingClass, index)">
                    <div class="sc-formcomponent">
                        @Html.RenderView(child.Id.ToString(), new { Id = child.ItemName + "_" + row, ConfigurationItem = child.Id.ToString() })
                        <div class="sc-formhelptext" title="@child.HelpText">
                            <span>@child.HelpText</span>
                        </div>
                    </div>
                </div>
            @Html.RenderClearFix(Model.GridAttributes, index)
                        index++;
                    }
                }
            }
    </div>
@if (!string.IsNullOrEmpty(Model.Text))
{
    <button class="btn sc-button btn-default" data-bind="click:clickHandler">
        <span class="sc-button-text" data-bind="text:Text">@Model.Text</span>
    </button>
}
</form>